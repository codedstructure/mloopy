import time

d = [0x00, 0x90, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20,
0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81,
0x20, 0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64,
0x81, 0x20, 0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41,
0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50,
0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x39, 0x64, 0x81,
0x20, 0x39, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64,
0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43,
0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00,
0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39,
0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00,
0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32,
0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20,
0x3A, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81,
0x20, 0x3A, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00,
0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32,
0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20,
0x3A, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81,
0x20, 0x3A, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00,
0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64,
0x81, 0x20, 0x3A, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40,
0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A,
0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20,
0x40, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39, 0x64, 0x81,
0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00,
0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39, 0x64,
0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41,
0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20,
0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64, 0x81,
0x20, 0x41, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x41, 0x64,
0x81, 0x20, 0x41, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39,
0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20,
0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64, 0x81,
0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64,
0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43,
0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x39, 0x64, 0x81,
0x20, 0x39, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00,
0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x43, 0x64,
0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x43,
0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00,
0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x3A,
0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00,
0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45, 0x00, 0x50, 0x32,
0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3C, 0x64, 0x81, 0x20,
0x3C, 0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3C, 0x64, 0x81,
0x20, 0x3C, 0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45, 0x00,
0x50, 0x3C, 0x64, 0x81, 0x20, 0x3C, 0x00, 0x50, 0x2E, 0x64,
0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x2E,
0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20,
0x3A, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50,
0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81,
0x20, 0x3A, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00,
0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64,
0x81, 0x20, 0x3A, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41,
0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A,
0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20,
0x41, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64, 0x81,
0x20, 0x37, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00,
0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64,
0x81, 0x20, 0x37, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40,
0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37,
0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20,
0x41, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50,
0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x41, 0x64, 0x81,
0x20, 0x41, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00,
0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x41, 0x64,
0x81, 0x20, 0x41, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43,
0x00, 0x50, 0x2D, 0x64, 0x81, 0x20, 0x2D, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20,
0x43, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20, 0x2D, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64, 0x81,
0x20, 0x43, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20, 0x2D, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43, 0x64,
0x81, 0x20, 0x43, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20, 0x2D,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x43,
0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20,
0x2D, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50,
0x43, 0x64, 0x81, 0x20, 0x43, 0x00, 0x50, 0x41, 0x64, 0x81,
0x20, 0x41, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00,
0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x41, 0x64,
0x81, 0x20, 0x41, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E,
0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x41,
0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20,
0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x40, 0x64, 0x81, 0x20, 0x40, 0x00, 0x50, 0x2E, 0x64, 0x81,
0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00,
0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00, 0x50, 0x2E, 0x64,
0x81, 0x20, 0x2E, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40,
0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x40,
0x64, 0x81, 0x20, 0x40, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20,
0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00, 0x50,
0x3E, 0x64, 0x81, 0x20, 0x3E, 0x00, 0x50, 0x2E, 0x64, 0x81,
0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A, 0x00,
0x50, 0x3E, 0x64, 0x81, 0x20, 0x3E, 0x00, 0x50, 0x2E, 0x64,
0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20, 0x3A,
0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00, 0x50, 0x2E,
0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81, 0x20,
0x3A, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00, 0x50,
0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x3A, 0x64, 0x81,
0x20, 0x3A, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20, 0x40, 0x00,
0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x30, 0x64,
0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37,
0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50, 0x30,
0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20,
0x37, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41, 0x00, 0x50,
0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64, 0x81,
0x20, 0x37, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43, 0x00,
0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37, 0x64,
0x81, 0x20, 0x37, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20, 0x43,
0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x37,
0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x43, 0x64, 0x81, 0x20,
0x43, 0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39, 0x64, 0x81,
0x20, 0x39, 0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45, 0x00,
0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x39, 0x64,
0x81, 0x20, 0x39, 0x00, 0x50, 0x45, 0x64, 0x81, 0x20, 0x45,
0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50, 0x39,
0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x40, 0x64, 0x81, 0x20,
0x40, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x40, 0x64, 0x81,
0x20, 0x40, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x40, 0x64,
0x81, 0x20, 0x40, 0x00, 0x50, 0x41, 0x64, 0x81, 0x20, 0x41,
0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50, 0x35,
0x64, 0x81, 0x20, 0x35, 0x00, 0x50, 0x3E, 0x64, 0x81, 0x20,
0x3E, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00, 0x50,
0x35, 0x64, 0x81, 0x20, 0x35, 0x00, 0x50, 0x3E, 0x64, 0x81,
0x20, 0x3E, 0x00, 0x50, 0x2E, 0x64, 0x81, 0x20, 0x2E, 0x00,
0x50, 0x35, 0x64, 0x81, 0x20, 0x35, 0x00, 0x50, 0x3C, 0x64,
0x81, 0x20, 0x3C, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20, 0x2D,
0x00, 0x50, 0x35, 0x64, 0x81, 0x20, 0x35, 0x00, 0x50, 0x3C,
0x64, 0x81, 0x20, 0x3C, 0x00, 0x50, 0x2D, 0x64, 0x81, 0x20,
0x2D, 0x00, 0x50, 0x35, 0x64, 0x81, 0x20, 0x35, 0x00, 0x50,
0x3C, 0x64, 0x81, 0x20, 0x3C, 0x00, 0x50, 0x3E, 0x64, 0x81,
0x20, 0x3E, 0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00,
0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A, 0x64,
0x81, 0x20, 0x3A, 0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B,
0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x3A,
0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x2B, 0x64, 0x81, 0x20,
0x2B, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50,
0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x29, 0x64, 0x81,
0x20, 0x29, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30, 0x00,
0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x29, 0x64,
0x81, 0x20, 0x29, 0x00, 0x50, 0x30, 0x64, 0x81, 0x20, 0x30,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x3A,
0x64, 0x81, 0x20, 0x3A, 0x00, 0x50, 0x27, 0x64, 0x81, 0x20,
0x27, 0x00, 0x50, 0x33, 0x64, 0x81, 0x20, 0x33, 0x00, 0x50,
0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x27, 0x64, 0x81,
0x20, 0x27, 0x00, 0x50, 0x33, 0x64, 0x81, 0x20, 0x33, 0x00,
0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x27, 0x64,
0x81, 0x20, 0x27, 0x00, 0x50, 0x33, 0x64, 0x81, 0x20, 0x33,
0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50, 0x29,
0x64, 0x81, 0x20, 0x29, 0x00, 0x50, 0x35, 0x64, 0x81, 0x20,
0x35, 0x00, 0x50, 0x39, 0x64, 0x81, 0x20, 0x39, 0x00, 0x50,
0x29, 0x64, 0x81, 0x20, 0x29, 0x00, 0x50, 0x37, 0x64, 0x81,
0x20, 0x37, 0x00, 0x50, 0x35, 0x64, 0x81, 0x20, 0x35, 0x00,
0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x2B, 0x64,
0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50, 0x2B,
0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20,
0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00, 0x50,
0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00,
0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37,
0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32,
0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20,
0x37, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50,
0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64, 0x81,
0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37, 0x00,
0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32, 0x64,
0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20, 0x37,
0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50, 0x32,
0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81, 0x20,
0x37, 0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00, 0x50,
0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64, 0x81,
0x20, 0x37, 0x00, 0x50, 0x2B, 0x64, 0x81, 0x20, 0x2B, 0x00,
0x50, 0x32, 0x64, 0x81, 0x20, 0x32, 0x00, 0x50, 0x37, 0x64,
0x81, 0x20, 0x37, 0x00, 0x50, 0x32, 0x64, 0x81, 0x20, 0x32,
0x00]

didx = 0
def getLength():
    global didx
    l = 0
    for count in range(4):
        z = d[didx]; didx+=1
        l = l*128 + (z & 127);
        if ((z & 128) == 0):
            break
    return l

rstat = 0
def getEvent():
    global rstat, didx
    rx = d[didx]; didx+=1
    msgbytes = []

    # Meta Event, Sysex, Escaped SysEx, Channel Message
    if ( rx == 0xF0 or  # SysEx
         rx == 0xF7 ):   # escaped sysex
        len = d[didx]; didx+=1
        didx += len
        rstat = 0
        return 0
    elif ( rx == 0xFF ): # meta event
        didx+=1 # skip type - don't care
        len = d[didx]; didx+=1
        didx += len
        rstat = 0
        return 0
    elif ( rx >= 0x80 ):
        # get new running status
        rstat = rx
        rx = d[didx]; didx+=1
        msgbytes = [rstat]
    elif ( rstat == 0 ):
        # bad - got data bytes without any running status active
        return 0

    # 1 or 2 databytes of channel message left
    msgbytes.append(rx)
    if ( not (rstat >= 0xC0 and rx <= 0xDF) ):
        # there's another byte to send
        rx = d[didx]; didx+=1
        msgbytes.append(rx)

    return msgbytes


def main(f):
    global didx
    while True:
        didx = 0;
        while (didx < len(d)):
            delay = getLength()
            time.sleep(0.0005*delay)
            msgbytes = getEvent()
            print "*%s*"%msgbytes
            for byte in msgbytes:
                f.write(chr(byte))

if __name__ == '__main__':
    f = open('/dev/midi1', 'wb+', 0) # unbuffered
    main(f)
